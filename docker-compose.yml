version: '2'
services:
  icinga2:
    #image: jordan/icinga2
    build:
      context: ./
      dockerfile: Dockerfile
    restart: on-failure:5
    # Set your hostname to the FQDN under which your
    # sattelites will reach this container
    hostname: icinga2
    env_file:
      - secrets_sql.env
    environment:
      - ICINGA2_FEATURE_GRAPHITE=0
      # Important:
      # keep the hostname graphite the same as
      # the name of the graphite docker-container
      - ICINGA2_FEATURE_GRAPHITE_HOST=graphite
      - ICINGA2_FEATURE_GRAPHITE_PORT=2003
      - ICINGA2_FEATURE_GRAPHITE_URL=http://graphite
      #- ICINGAWEB2_ADMIN_USER=icingaadmin
      #- ICINGAWEB2_ADMIN_PASS=icinga
      #- ICINGA2_USER_FULLNAME=Icinga2 Docker Monitoring Instance
      - DEFAULT_MYSQL_HOST=mysql
    volumes:
      - ./data/icinga/cache:/var/cache/icinga2
      - ./data/icinga/certs:/etc/apache2/ssl
      - ./data/icinga/etc/icinga2:/etc/icinga2
      - ./data/icinga/etc/icingaweb2:/etc/icingaweb2
      - ./data/icinga/lib/icinga:/var/lib/icinga2
      - ./data/icinga/lib/php/sessions:/var/lib/php/sessions
      - ./data/icinga/log/apache2:/var/log/apache2
      - ./data/icinga/log/icinga2:/var/log/icinga2
      - ./data/icinga/log/icingaweb2:/var/log/icingaweb2
      - ./data/icinga/log/mysql:/var/log/mysql
      - ./data/icinga/spool:/var/spool/icinga2
      # Sending e-mail
      #  See: https://github.com/jjethwa/icinga2#sending-notification-mails
      #  If you want to enable outbound e-mail, edit the file mstmp/msmtprc
      #  and configure to your corresponding mail setup. The default is a
      #  Gmail example but msmtp can be used for any MTA configuration.
      #  Change the aliases in msmtp/aliases to your recipients.
      #  Then uncomment the rows below
      # - ./msmtp/msmtprc:/etc/msmtprc:ro
      # - ./msmtp/aliases:/etc/aliases:ro
    ports:
      - "8080:80"
      - "443:443"
      - "5665:5665"
  mysql:
    image: mariadb
    container_name: mysql
    env_file:
      - secrets_sql.env
    volumes:
      - ./data/mysql/data:/var/lib/mysql
      - ./data/mysql/queries:/srv/
      # If you have previously used the container's internal DB use:
      #- ./data/icinga/lib/mysql:/var/lib/mysql
    ports:
      - "3306:3306"
  web-01.dev.local:
    image: chussenot/tiny-server:latest
    container_name: web-01.dev.local
  web-02.dev.local:
    image: chussenot/tiny-server:latest
    container_name: web-02.dev.local
  queue-01.dev.local:
    image: chussenot/tiny-server:latest
    container_name: queue-01.dev.local
  web-01.prod.example.com:
    image: chussenot/tiny-server:latest
    container_name: web-01.prod.example.com
  web-02.prod.example.com:
    image: chussenot/tiny-server:latest
    container_name: web-02.prod.example.com
  web-03.prod.example.com:
    image: chussenot/tiny-server:latest
    container_name: web-03.prod.example.com
  queue-01.prod.example.com:
    image: chussenot/tiny-server:latest
    container_name: queue-01.prod.example.com
  queue-02.prod.example.com:
    image: chussenot/tiny-server:latest
    container_name: queue-02.prod.example.com
  queue-03.prod.example.com:
    image: chussenot/tiny-server:latest
    container_name: queue-03.prod.example.com

  web-01.staging.example.com:
    image: chussenot/tiny-server:latest
    container_name: web-01.staging.example.com
  web-02.staging.example.com:
    image: chussenot/tiny-server:latest
    container_name: web-02.staging.example.com
  web-03.staging.example.com:
    image: chussenot/tiny-server:latest
    container_name: web-03.staging.example.com
  queue-01.staging.example.com:
    image: chussenot/tiny-server:latest
    container_name: queue-01.staging.example.com
  queue-02.staging.example.com:
    image: chussenot/tiny-server:latest
    container_name: queue-02.staging.example.com
